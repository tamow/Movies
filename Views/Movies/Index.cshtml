@model MvcMovie.Models.MovieViewModel
@inject MvcMovie.Common Common

@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="~/lib/datatables/datatables.min.css" />

<style type="text/css">
form.cmxform label.error, label.error {
    color: red;
    font-weight: normal;
}
</style>

<script src="~/lib/jquery-tabledit/jquery-3.3.1.min.js"></script>
<script src="~/lib/jquery-tabledit/jquery.tabledit.min.js"></script>
<script src="~/lib/datatables/datatables.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>

<br>

<form asp-controller="Movies" asp-action="Index" id="form1">
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                <label asp-for="SearchString"></label>
                <input type="text" asp-for="SearchString" class="form-control" />
                <span asp-validation-for="SearchString" class="text-danger"></span>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="form-group">
                <label asp-for="Genres"></label>
                <select asp-for="Genres" asp-items="Common.Genres" class="form-control">
                    <option value=""></option>
                </select>
                <span asp-validation-for="Genres" class="text-danger"></span>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">検索</button>
@if (Model != null) {
    <button class="btn btn-link pull-right">CSV</button>
}

<div id="success" class="alert alert-warning" role="alert" style="display: none; margin-top: 10px;">更新しました</div>
<div id="fail" class="alert alert-danger" role="alert" style="display: none; margin-top: 10px;">更新に失敗しました</div>


@if (Model != null) {
    <table class="table table-striped table-bordered" id="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.movies[0].ID)</th>
                <th>@Html.DisplayNameFor(model => model.movies[0].Title)</th>
                <th>@Html.DisplayNameFor(model => model.movies[0].ReleaseDate)</th>
                <th>@Html.DisplayNameFor(model => model.movies[0].Genre)</th>
                <th>@Html.DisplayNameFor(model => model.movies[0].Price)</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.movies) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.ID)</td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Genre)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
            </tr>
        }
        </tbody>
    </table>
}

<div id="pager">
      <ul id="pagination" class="pagination-sm"></ul>
</div>
</form>

<script>

// jquery-tabledit
$('#table').Tabledit({
    url: '/Movies/Update',
    // リストアボタン 非表示
    restoreButton: false,
    // 削除ボタン 非表示
    deleteButton: false,
    // 列設定
    columns: {
        identifier: [0, 'id'],
        // 編集可能な行
        editable: [[2, 'releaseDate'], [4, 'price']]
    },
    // ajax送信前の処理(=saveボタン押下時)
    onAjax: function(action, serialize) {
        $('#success').hide();
        $('#fail').hide();
        if (!$("#form1").valid()) {
            return false;
        }
    },
    // ajax送信成功後の処理
    onSuccess: function(data, textStatus, jqXHR) {
        $('#success').show();
        $('#fail').hide();
    },
    // ajaxエラー時の処理
    onFail: function(jqXHR, textStatus, errorThrown) {
        $('#success').hide();
        $('#fail').show();
//        $('#fail').text(jqXHR.responseJSON['message']);
    }
});

// Datatables
$('#table').DataTable({
    // 件数切替 無効
    lengthChange: false,
    // 検索 無効
    searching: false,
    // ソート 無効
    ordering: false,
    // 1ページ表示件数
    pageLength: 50,
    // 日本語化
    language: {
        url: location.href + "/../lib/datatables/Japanese.json"
    }
 });

// jQuery Validation
$.validator.addMethod("dateFormat",
    function(value, element) {
        var regEx = /^\d{4}-\d{2}-\d{2}$/;
        if(!value.match(regEx)) {
            return false;
        }
        var d = new Date(value);
        if(!d.getTime() && d.getTime() !== 0) {
            return false;
        }
        return d.toISOString().slice(0,10) === value;
    }
);
$('#form1').validate({
    // キーボードのキーを離した時にチェックを行わない
    onkeyup: false,
    // クリック後のチェックを行わない
    onclick: false,
    // チェック内容
    rules: {
        releaseDate: {
            required: true,
            dateFormat: true
        },
        price: {
            required: true,
            number: true
        }
    },
    // エラーメッセージ
    messages: {
        releaseDate: {
            required: 'リリース日は必須です。',
            dateFormat: '正しい形式で日付を入力してください。'
        },
        price: {
            required: '価格は必須です。',
            number: '数値を入力してください。'
        }
    }
});

</script>
